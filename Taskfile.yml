version: "3"

dotenv:
  - .env

vars:
  # Registry and image names
  REGISTRY:        "{{.REGISTRY | default `registry.foos.net:5000`}}"
  IMAGE_NAME:      "{{.IMAGE_NAME | default `virtlab-frontend`}}"
  IMAGE_TAG:       "{{.IMAGE_TAG | default `latest`}}"

  # Derived image names
  IMAGE:           "{{.REGISTRY}}/{{.IMAGE_NAME}}:{{.IMAGE_TAG}}"
  DEV_IMAGE:       "{{.REGISTRY}}/{{.IMAGE_NAME}}-dev:{{.IMAGE_TAG}}"

  # Containers
  CONTAINER:       "{{.CONTAINER | default `virtlab-frontend`}}"
  DEV_CONTAINER:   "{{.DEV_CONTAINER | default `virtlab-frontend-dev`}}"

  # Ports
  HOST_PORT:       "{{.HOST_PORT | default `8080`}}"
  DEV_PORT:        "{{.DEV_PORT | default `5173`}}"

  # Other vars
  VITE_API_URL:    "{{.VITE_API_URL | default `http://virtlab.foos.net`}}"
  VITE_API_URL_DEV:    "{{.VITE_API_URL_DEV | default `http://localhost:8000`}}"
  CONTEXT:         "{{.CONTEXT | default `.`}}"
  CONTAINERFILE:   "{{.CONTAINERFILE | default `Containerfile`}}"
  PROD_TARGET:      "{{.PROD_TARGET | default `prod`}}"
  DEV_TARGET:       "{{.DEV_TARGET | default `dev`}}"

tasks:

  build:
    desc: Build production image with Buildah and tag for registry.foos.net
    cmds:
      - |
        set -euo pipefail
        echo "Building image: {{.IMAGE}}"
        buildah bud \
          --layers \
          --target {{.PROD_TARGET}} \
          --build-arg VITE_API_URL={{.VITE_API_URL}} \
          -t {{.IMAGE}} \
          -f {{.CONTAINERFILE}} {{.CONTEXT}}

  push:
    desc: Push production image to registry.foos.net
    deps: [build]
    cmds:
      - |
        set -euo pipefail
        echo "Pushing image to {{.REGISTRY}}"
        buildah push {{.IMAGE}}

  up:
    desc: Run production container with Podman
    deps: [build]
    cmds:
      - |
        set -euo pipefail
        podman rm -f {{.CONTAINER}} >/dev/null 2>&1 || true
        echo "Starting frontend at http://localhost:{{.HOST_PORT}}"
        podman run -d --name {{.CONTAINER}} \
          -p {{.HOST_PORT}}:80 \
          {{.IMAGE}}
        echo "Frontend: http://localhost:{{.HOST_PORT}}  |  API: {{.VITE_API_URL}}"

  down:
    desc: Stop and remove production container
    cmds:
      - podman rm -f {{.CONTAINER}} >/dev/null 2>&1 || true

  restart:
    desc: Restart production container
    cmds:
      - task: down
      - task: up

  logs:
    desc: Tail production logs
    cmds:
      - podman logs -f {{.CONTAINER}}

  dev:build:
    desc: Build development image with Buildah
    cmds:
      - |
        set -euo pipefail
        echo "Building dev image: {{.DEV_IMAGE}}"
        buildah bud \
          --layers \
          --target {{.DEV_TARGET}} \
          --build-arg VITE_API_URL={{.VITE_API_URL_DEV}} \
          -t {{.DEV_IMAGE}} \
          -f {{.CONTAINERFILE}} {{.CONTEXT}}

  dev:up:
    desc: Run Vite development container with Podman
    deps: [dev:build]
    cmds:
      - |
        set -euo pipefail
        podman rm -f {{.DEV_CONTAINER}} >/dev/null 2>&1 || true
        echo "Starting dev container on http://localhost:{{.DEV_PORT}}"
        podman run -d --name {{.DEV_CONTAINER}} \
          -p {{.DEV_PORT}}:5173 \
          -e VITE_API_URL={{.VITE_API_URL_DEV}} \
          -v ./virtlab-frontend:/app:Z \
          {{.DEV_IMAGE}} \
          npm run dev -- --host 0.0.0.0
        echo "Dev UI:  http://localhost:{{.DEV_PORT}} | API: {{.VITE_API_URL}}"

  dev:down:
    desc: Stop development container
    cmds:
      - podman rm -f {{.DEV_CONTAINER}} >/dev/null 2>&1 || true

  dev:logs:
    desc: Tail development logs
    cmds:
      - podman logs -f {{.DEV_CONTAINER}}

  dev:shell:
    desc: Open a shell in the development image
    deps: [dev:build]
    interactive: true
    cmds:
      - podman run --rm -it -v ./virtlab-frontend:/app -v node_modules_virtlab:/app/node_modules -p {{.DEV_PORT}}:5173 {{.DEV_IMAGE}} bash

  clean:
    desc: Remove containers and prune dangling images
    cmds:
      - podman rm -f {{.CONTAINER}} {{.DEV_CONTAINER}} >/dev/null 2>&1 || true
      - buildah images -q --filter dangling=true | xargs -r buildah rmi || true

  nuke:
    desc: Clean and remove development volumes
    cmds:
      - task: clean
      - podman volume rm node_modules_virtlab >/dev/null 2>&1 || true
